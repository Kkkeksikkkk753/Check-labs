{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Keksik753\\\\programs\\\\react\\\\practCheckLab\\\\cheker\\\\src\\\\Components\\\\ChooseArea\\\\ChooseArea.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChooseArea = ({\n  getInfo,\n  allOpt,\n  courses,\n  setCourse,\n  groups,\n  setGroup,\n  labs,\n  setLab,\n  strfilt\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"divOpts\",\n    children: [[...courses].filter(p => p.name.toLowerCase().includes(strfilt.toLowerCase())).map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: a.id === allOpt[0].id ? \"options optAct\" : \"options\",\n      onClick: () => {\n        setCourse(a);\n        getInfo(a).then(res => setCourse(prev => ({\n          ...prev,\n          info: res\n        })));\n      },\n      children: [a.name, \" - \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440: \", a.semester, \" \", a.email]\n    }, a.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 104\n    }, this)), [...groups].filter(p => p.toLowerCase().includes(strfilt.toLowerCase())).map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: a === allOpt[1] ? \"options optAct\" : \"options\",\n      onClick: e => {\n        setGroup(a);\n      },\n      children: a\n    }, a, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 96\n    }, this)), [...labs].filter(p => p.toLowerCase().includes(strfilt.toLowerCase())).map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: a === allOpt[2] ? \"options optAct\" : \"options\",\n      onClick: e => {\n        setLab(a);\n      },\n      children: a\n    }, a, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 94\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = ChooseArea;\nexport default ChooseArea;\nvar _c;\n$RefreshReg$(_c, \"ChooseArea\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChooseArea","getInfo","allOpt","courses","setCourse","groups","setGroup","labs","setLab","strfilt","className","children","filter","p","name","toLowerCase","includes","map","a","id","onClick","then","res","prev","info","semester","email","fileName","_jsxFileName","lineNumber","columnNumber","e","_c","$RefreshReg$"],"sources":["C:/Users/Keksik753/programs/react/practCheckLab/cheker/src/Components/ChooseArea/ChooseArea.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst ChooseArea = ({ getInfo, allOpt, courses, setCourse, groups, setGroup, labs,setLab, strfilt}) => {\r\n    return (\r\n        <div className={\"divOpts\"}>\r\n            {[...courses].filter(p => p.name.toLowerCase().includes(strfilt.toLowerCase())).map((a) => <div key={a.id} className={a.id === allOpt[0].id ? \"options optAct\" : \"options\"} onClick={() => {\r\n                setCourse(a)\r\n                getInfo(a).then(res => setCourse(prev => ({ ...prev, info: res })))\r\n            }\r\n            }>{a.name} - семестр: {a.semester} {a.email}</div>)}\r\n            {[...groups].filter(p=>p.toLowerCase().includes(strfilt.toLowerCase())).map((a) => <div key={a} className={a === allOpt[1] ? \"options optAct\" : \"options\"} onClick={(e) => {\r\n                setGroup(a)}\r\n            }>{a}</div>)}\r\n            {[...labs].filter(p=>p.toLowerCase().includes(strfilt.toLowerCase())).map((a) => <div key={a} className={a === allOpt[2] ? \"options optAct\" : \"options\"} onClick={(e) => {\r\n                setLab(a)}\r\n            }>{a}</div>)}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChooseArea;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC,MAAM;EAAEC,OAAO;EAAEC,SAAS;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,IAAI;EAACC,MAAM;EAAEC;AAAO,CAAC,KAAK;EACnG,oBACIV,OAAA;IAAKW,SAAS,EAAE,SAAU;IAAAC,QAAA,GACrB,CAAC,GAAGR,OAAO,CAAC,CAACS,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CAAEC,CAAC,iBAAKnB,OAAA;MAAgBW,SAAS,EAAEQ,CAAC,CAACC,EAAE,KAAKjB,MAAM,CAAC,CAAC,CAAC,CAACiB,EAAE,GAAG,gBAAgB,GAAG,SAAU;MAACC,OAAO,EAAEA,CAAA,KAAM;QACvLhB,SAAS,CAACc,CAAC,CAAC;QACZjB,OAAO,CAACiB,CAAC,CAAC,CAACG,IAAI,CAACC,GAAG,IAAIlB,SAAS,CAACmB,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEC,IAAI,EAAEF;QAAI,CAAC,CAAC,CAAC,CAAC;MACvE,CACC;MAAAX,QAAA,GAAEO,CAAC,CAACJ,IAAI,EAAC,iDAAY,EAACI,CAAC,CAACO,QAAQ,EAAC,GAAC,EAACP,CAAC,CAACQ,KAAK;IAAA,GAJ0DR,CAAC,CAACC,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIxD,CAAC,CAAC,EAClD,CAAC,GAAGzB,MAAM,CAAC,CAACO,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CAAEC,CAAC,iBAAKnB,OAAA;MAAaW,SAAS,EAAEQ,CAAC,KAAKhB,MAAM,CAAC,CAAC,CAAC,GAAG,gBAAgB,GAAG,SAAU;MAACkB,OAAO,EAAGW,CAAC,IAAK;QACvKzB,QAAQ,CAACY,CAAC,CAAC;MAAA,CACd;MAAAP,QAAA,EAAEO;IAAC,GAFyFA,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpF,CAAC,CAAC,EACX,CAAC,GAAGvB,IAAI,CAAC,CAACK,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CAAEC,CAAC,iBAAKnB,OAAA;MAAaW,SAAS,EAAEQ,CAAC,KAAKhB,MAAM,CAAC,CAAC,CAAC,GAAG,gBAAgB,GAAG,SAAU;MAACkB,OAAO,EAAGW,CAAC,IAAK;QACrKvB,MAAM,CAACU,CAAC,CAAC;MAAA,CACZ;MAAAP,QAAA,EAAEO;IAAC,GAFuFA,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElF,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGX,CAAC;AAEd,CAAC;AAACE,EAAA,GAlBIhC,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
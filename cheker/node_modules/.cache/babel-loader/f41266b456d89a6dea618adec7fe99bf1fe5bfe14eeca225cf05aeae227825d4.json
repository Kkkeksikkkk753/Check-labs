{"ast":null,"code":"import axios from 'axios';\nexport default class checkService {\n  static async getCourses() {\n    //const response = await axios.get('courses', {});\n    return [{\n      id: \"1\",\n      name: \"История\",\n      semester: \"5\"\n    }, {\n      id: \"2\",\n      name: \"Литература\",\n      semester: \"2\"\n    }, {\n      id: \"3\",\n      name: \"Информатика\",\n      semester: \"3\"\n    }, {\n      id: \"4\",\n      name: \"Информатика\",\n      semester: \"4\"\n    }, {\n      id: \"5\",\n      name: \"Информатика\",\n      semester: \"5\"\n    }, {\n      id: \"6\",\n      name: \"Информатика\",\n      semester: \"6\"\n    }, {\n      id: \"7\",\n      name: \"Информатика\",\n      semester: \"7\"\n    }, {\n      id: \"8\",\n      name: \"Информатика\",\n      semester: \"8\"\n    }, {\n      id: \"9\",\n      name: \"Информатика\",\n      semester: \"9\"\n    }, {\n      id: \"10\",\n      name: \"Информатика\",\n      semester: \"10\"\n    }, {\n      id: \"11\",\n      name: \"Информатика\",\n      semester: \"11\"\n    }];\n  }\n  static async getInfoCourse(idCourse) {\n    return {\n      id: \"1\",\n      name: \"История\",\n      semester: \"5\",\n      email: \"sadasd\"\n    };\n  }\n  static async getGroups(idCourse) {\n    //const response = await axios.get(`courses/${idCourse}/groups`, {});\n    if (idCourse === \"1\") {\n      return [\"4031\", \"4032\", \"4036\", \"Z0431\", \"4030\", \"4021\", \"4026\", \"Z0421\", \"4010\", \"4022\", \"4026\", \"Z0441\", \"4041\", \"4042\", \"4046\", \"Z0451\", \"4051\", \"4052\", \"4056\", \"Z0461\"];\n    } else {\n      return [\"2031\", \"2032\", \"2036\", \"Z0231\", \"2030\", \"2082\", \"2086\", \"Z0221\", \"2021\", \"2022\", \"2026\", \"Z0241\", \"2041\", \"2042\", \"2046\", \"Z0251\", \"2051\", \"2052\", \"2056\", \"Z0261\"];\n    }\n  }\n  static async getLabs(idCourse, idGroup) {\n    //const response = await axios.get(`courses/${idCourse}/groups/${idGroup}/labs`, {});\n    if (idGroup === \"4031\") {\n      return [\"ЛР0\", \"ЛР1\", \"ЛР2\", \"ЛР3\"];\n    } else if (idGroup === \"4032\") {\n      return [\"ЛР0\", \"ЛР1\", \"ЛР2\", \"КР1\"];\n    } else {\n      return [\"КР1\", \"КР2\"];\n    }\n  }\n  static async postRegister(idCourse, idGroup, {\n    surname,\n    name,\n    patronymic,\n    github\n  }) {\n    //const response = await axios.post(`courses/${idCourse}/groups/${idGroup}/register`, {\n    //  name, surname, patronymic, github\n    // });\n    if (github === \"202r\" || github === \"202w\") {\n      return {\n        status: 202,\n        message: \"Этот аккаунт GitHub уже был указан ранее для этого же студента. Для изменения аккаунта обратитесь к преподавателю\"\n      };\n    }\n    return {\n      status: 400,\n      message: \"Пользователь GitHub не найден. Проверьте никнейм github.\"\n    };\n  }\n\n  //POST /courses/{course_id}/groups/{group_id}/labs/{lab_id}/grade\n  static async postGrade(idCourse, idGroup, idLab, github) {\n    //const response = await axios.post(`courses/${idCourse}/groups/${idGroup}/labs/${idLab}/grade`, {\n    //github\n    // });\n    if (github === \"202r\") {\n      return {\n        message: \"Проверка пройдена успешно.\"\n      };\n    } else {\n      return {\n        message: \"Проверка не пройдена.\"\n      };\n    }\n  }\n}","map":{"version":3,"names":["axios","checkService","getCourses","id","name","semester","getInfoCourse","idCourse","email","getGroups","getLabs","idGroup","postRegister","surname","patronymic","github","status","message","postGrade","idLab"],"sources":["C:/Users/Keksik753/programs/react/practCheckLab/cheker/src/API/checkService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport default class checkService {\r\n    static async getCourses(){\r\n        //const response = await axios.get('courses', {});\r\n        return [\r\n            {id: \"1\",\r\n            name: \"История\",\r\n            semester: \"5\"},\r\n            {id: \"2\",\r\n            name: \"Литература\",\r\n            semester: \"2\"},\r\n            {id: \"3\",\r\n                name: \"Информатика\",\r\n                semester: \"3\"},\r\n            {id: \"4\",\r\n                name: \"Информатика\",\r\n                semester: \"4\"},\r\n            {id: \"5\",\r\n                name: \"Информатика\",\r\n                semester: \"5\"},\r\n            {id: \"6\",\r\n                name: \"Информатика\",\r\n                semester: \"6\"},\r\n            {id: \"7\",\r\n                name: \"Информатика\",\r\n                semester: \"7\"},\r\n            {id: \"8\",\r\n                name: \"Информатика\",\r\n                semester: \"8\"},\r\n            {id: \"9\",\r\n                name: \"Информатика\",\r\n                semester: \"9\"},\r\n            {id: \"10\",\r\n                name: \"Информатика\",\r\n                semester: \"10\"},\r\n            {id: \"11\",\r\n            name: \"Информатика\",\r\n            semester: \"11\"}\r\n\r\n        ]\r\n    }\r\n\r\n    static async getInfoCourse(idCourse){\r\n       return  {id: \"1\",\r\n            name: \"История\",\r\n            semester: \"5\",\r\n            email: \"sadasd\"}\r\n    }\r\n\r\n    static async getGroups(idCourse){\r\n        //const response = await axios.get(`courses/${idCourse}/groups`, {});\r\n        if(idCourse===\"1\"){\r\n            return [\"4031\", \"4032\", \"4036\", \"Z0431\", \"4030\", \"4021\", \"4026\", \"Z0421\", \"4010\", \"4022\", \"4026\", \"Z0441\",\"4041\", \"4042\", \"4046\", \"Z0451\", \"4051\", \"4052\", \"4056\", \"Z0461\"]\r\n        }\r\n        else{\r\n            return [\"2031\", \"2032\", \"2036\", \"Z0231\", \"2030\", \"2082\", \"2086\", \"Z0221\", \"2021\", \"2022\", \"2026\", \"Z0241\", \"2041\", \"2042\", \"2046\", \"Z0251\", \"2051\", \"2052\", \"2056\", \"Z0261\"]\r\n        }\r\n    }\r\n\r\n    static async getLabs(idCourse, idGroup){\r\n        //const response = await axios.get(`courses/${idCourse}/groups/${idGroup}/labs`, {});\r\n        if(idGroup===\"4031\"){\r\n            return [\"ЛР0\", \"ЛР1\", \"ЛР2\", \"ЛР3\"]\r\n        }\r\n        else if(idGroup===\"4032\"){\r\n            return [\"ЛР0\", \"ЛР1\", \"ЛР2\", \"КР1\"]\r\n        }\r\n        else {\r\n            return [\"КР1\", \"КР2\"]\r\n        }\r\n    }\r\n\r\n    static async postRegister(idCourse, idGroup, {surname, name, patronymic, github}){\r\n        //const response = await axios.post(`courses/${idCourse}/groups/${idGroup}/register`, {\r\n        //  name, surname, patronymic, github\r\n        // });\r\n        if(github === \"202r\" || github === \"202w\"){\r\n            return {status: 202, message: \"Этот аккаунт GitHub уже был указан ранее для этого же студента. Для изменения аккаунта обратитесь к преподавателю\"}\r\n        }\r\n        return {status: 400, message: \"Пользователь GitHub не найден. Проверьте никнейм github.\"}\r\n    }\r\n\r\n\r\n    //POST /courses/{course_id}/groups/{group_id}/labs/{lab_id}/grade\r\n    static async postGrade(idCourse, idGroup, idLab, github){\r\n        //const response = await axios.post(`courses/${idCourse}/groups/${idGroup}/labs/${idLab}/grade`, {\r\n            //github\r\n        // });\r\n        if (github === \"202r\"){\r\n            return {message: \"Проверка пройдена успешно.\"}\r\n        }\r\n        else{\r\n            return {message: \"Проверка не пройдена.\"}\r\n        }\r\n\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
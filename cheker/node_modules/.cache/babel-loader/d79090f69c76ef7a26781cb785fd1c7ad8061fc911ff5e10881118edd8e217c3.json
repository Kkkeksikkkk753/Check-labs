{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nexport default class checkService {\n  static async getCourses() {\n    const response = await api.get(\"/courses\", {});\n    console.log(response);\n    return response.data;\n  }\n  static async getGroups(course_id) {\n    const response = await api.get(`/courses/${course_id}/groups`, {});\n    return response.data;\n  }\n  static async getLabs(course_id, groups_id) {\n    const response = await api.get(`/courses/${course_id}/groups/${groups_id}/labs`, {});\n    return response.data;\n  }\n  static async postRegister(course_id, groups_id, {\n    surname,\n    name,\n    patronymic,\n    github\n  }) {\n    const response = await axios.post(`/courses/${course_id}/groups/${groups_id}/register`, {\n      name,\n      surname,\n      patronymic,\n      github\n    });\n    return response.message;\n  }\n\n  //POST /courses/{course_id}/groups/{group_id}/labs/{lab_id}/grade\n  static async postGrade(idCourse, idGroup, idLab, github) {\n    //const response = await axios.post(`courses/${idCourse}/groups/${idGroup}/labs/${idLab}/grade`, {\n    //github\n    // });\n    if (github === \"202r\") {\n      return {\n        message: \"Проверка пройдена успешно.\"\n      };\n    } else {\n      return {\n        message: \"Проверка не пройдена.\"\n      };\n    }\n  }\n}","map":{"version":3,"names":["axios","api","create","baseURL","checkService","getCourses","response","get","console","log","data","getGroups","course_id","getLabs","groups_id","postRegister","surname","name","patronymic","github","post","message","postGrade","idCourse","idGroup","idLab"],"sources":["C:/Users/Keksik753/programs/react/practCheckLab/cheker/src/API/checkService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:5000'\r\n});\r\nexport default class checkService {\r\n    static async getCourses(){\r\n        const response = await api.get(\"/courses\", {});\r\n        console.log(response)\r\n        return response.data\r\n    }\r\n\r\n    static async getGroups(course_id){\r\n        const response = await api.get(`/courses/${course_id}/groups`, {});\r\n        return response.data\r\n    }\r\n\r\n    static async getLabs(course_id, groups_id){\r\n        const response = await api.get(`/courses/${course_id}/groups/${groups_id}/labs`, {});\r\n        return response.data\r\n    }\r\n\r\n    static async postRegister(course_id, groups_id, {surname, name, patronymic, github}){\r\n        const response = await axios.post(`/courses/${course_id}/groups/${groups_id}/register`, {\r\n         name, surname, patronymic, github\r\n        });\r\n        return response.message\r\n    }\r\n\r\n\r\n    //POST /courses/{course_id}/groups/{group_id}/labs/{lab_id}/grade\r\n    static async postGrade(idCourse, idGroup, idLab, github){\r\n        //const response = await axios.post(`courses/${idCourse}/groups/${idGroup}/labs/${idLab}/grade`, {\r\n            //github\r\n        // });\r\n        if (github === \"202r\"){\r\n            return {message: \"Проверка пройдена успешно.\"}\r\n        }\r\n        else{\r\n            return {message: \"Проверка не пройдена.\"}\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;AACF,eAAe,MAAMC,YAAY,CAAC;EAC9B,aAAaC,UAAUA,CAAA,EAAE;IACrB,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC9CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB,OAAOA,QAAQ,CAACI,IAAI;EACxB;EAEA,aAAaC,SAASA,CAACC,SAAS,EAAC;IAC7B,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,YAAYK,SAAS,SAAS,EAAE,CAAC,CAAC,CAAC;IAClE,OAAON,QAAQ,CAACI,IAAI;EACxB;EAEA,aAAaG,OAAOA,CAACD,SAAS,EAAEE,SAAS,EAAC;IACtC,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,YAAYK,SAAS,WAAWE,SAAS,OAAO,EAAE,CAAC,CAAC,CAAC;IACpF,OAAOR,QAAQ,CAACI,IAAI;EACxB;EAEA,aAAaK,YAAYA,CAACH,SAAS,EAAEE,SAAS,EAAE;IAACE,OAAO;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAM,CAAC,EAAC;IAChF,MAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACoB,IAAI,CAAC,YAAYR,SAAS,WAAWE,SAAS,WAAW,EAAE;MACvFG,IAAI;MAAED,OAAO;MAAEE,UAAU;MAAEC;IAC5B,CAAC,CAAC;IACF,OAAOb,QAAQ,CAACe,OAAO;EAC3B;;EAGA;EACA,aAAaC,SAASA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAEN,MAAM,EAAC;IACpD;IACI;IACJ;IACA,IAAIA,MAAM,KAAK,MAAM,EAAC;MAClB,OAAO;QAACE,OAAO,EAAE;MAA4B,CAAC;IAClD,CAAC,MACG;MACA,OAAO;QAACA,OAAO,EAAE;MAAuB,CAAC;IAC7C;EAEJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}